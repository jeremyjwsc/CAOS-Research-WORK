
-----Class K=2 

jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=2, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 2
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      25104,638769      task-clock (msec)         #    1,000 CPUs utilized
               362      context-switches          #    0,014 K/sec
                 3      cpu-migrations            #    0,000 K/sec
             9.412      page-faults               #    0,375 K/sec
    84.852.966.800      cycles                    #    3,380 GHz
    30.269.458.542      stalled-cycles-frontend   #   35,67% frontend cycles idle
    16.173.062.823      stalled-cycles-backend    #   19,06% backend  cycles idle
   163.602.323.766      instructions              #    1,93  insns per cycle
                                                  #    0,19  stalled cycles per insn
    20.028.801.548      branches                  #  797,813 M/sec
        39.552.434      branch-misses             #    0,20% of all branches

      25,115264929 seconds time elapsed
	  
-----Class K=4 
	  
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=4, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 4
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0
        6.0     1.0     3.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     1.0     0.0     0.0     3.0     3.00.0      3.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     7.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     0.0     4.0     0.0     0.0     0.0     1.0     1.00.0      4.0     10.0    0.0     1.0     7.0     1.0     0.0     0.0     0.0     0.0     0.0     3.0     0.0     1.0     1.01.0      0.0     10.0    1.0     2.0
        6.0     1.0     1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     0.0     0.0     3.0     5.00.0      4.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     1.0     0.0     2.0     0.0     2.0     1.0     0.0     5.0     0.0     0.0     0.0     1.0     1.00.0      5.0     21.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     1.01.0      1.0     14.0    1.0     1.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      37952,076656      task-clock (msec)         #    1,000 CPUs utilized
               665      context-switches          #    0,018 K/sec
                 8      cpu-migrations            #    0,000 K/sec
             9.541      page-faults               #    0,251 K/sec
   128.400.058.891      cycles                    #    3,383 GHz
    44.193.430.148      stalled-cycles-frontend   #   34,42% frontend cycles idle
    25.272.335.304      stalled-cycles-backend    #   19,68% backend  cycles idle
   260.440.511.447      instructions              #    2,03  insns per cycle
                                                  #    0,17  stalled cycles per insn
    30.035.493.680      branches                  #  791,406 M/sec
        37.926.122      branch-misses             #    0,13% of all branches

      37,967853804 seconds time elapsed

	  
-----Class K=6

jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=6, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 6
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0
        6.0     1.0     3.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     1.0     0.0     0.0     3.0     3.00.0      3.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     7.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     0.0     4.0     0.0     0.0     0.0     1.0     1.00.0      4.0     10.0    0.0     1.0     7.0     1.0     0.0     0.0     0.0     0.0     0.0     3.0     0.0     1.0     1.01.0      0.0     10.0    1.0     2.0
        6.0     1.0     1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     0.0     0.0     3.0     5.00.0      4.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     1.0     0.0     2.0     0.0     2.0     1.0     0.0     5.0     0.0     0.0     0.0     1.0     1.00.0      5.0     21.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     1.01.0      1.0     14.0    1.0     1.0
        1.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     4.0     0.0     2.0     0.0     223.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0
        7.0     11.0    1.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     2.0     2.0     1.0     0.0     0.04.0      1.0     1.0     0.0     0.0     1.0     0.0     2.0     1.0     4.0     0.0     5.0     0.0     0.0     0.0     6.00.0      2.0     23.0    0.0     3.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     5.0     7.0     0.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      50228,717030      task-clock (msec)         #    1,000 CPUs utilized
               968      context-switches          #    0,019 K/sec
                 5      cpu-migrations            #    0,000 K/sec
             9.693      page-faults               #    0,193 K/sec
   169.966.777.775      cycles                    #    3,384 GHz
    56.361.007.894      stalled-cycles-frontend   #   33,16% frontend cycles idle
    32.245.897.238      stalled-cycles-backend    #   18,97% backend  cycles idle
   357.287.395.262      instructions              #    2,10  insns per cycle
                                                  #    0,16  stalled cycles per insn
    40.043.730.019      branches                  #  797,228 M/sec
        34.060.069      branch-misses             #    0,09% of all branches

      50,249607946 seconds time elapsed


-----Class K=8

jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=8, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 8
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0
        6.0     1.0     3.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     1.0     0.0     0.0     3.0     3.00.0      3.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     7.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     0.0     4.0     0.0     0.0     0.0     1.0     1.00.0      4.0     10.0    0.0     1.0     7.0     1.0     0.0     0.0     0.0     0.0     0.0     3.0     0.0     1.0     1.01.0      0.0     10.0    1.0     2.0
        6.0     1.0     1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     0.0     0.0     3.0     5.00.0      4.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     1.0     0.0     2.0     0.0     2.0     1.0     0.0     5.0     0.0     0.0     0.0     1.0     1.00.0      5.0     21.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     1.01.0      1.0     14.0    1.0     1.0
        1.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     4.0     0.0     2.0     0.0     223.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0
        7.0     11.0    1.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     2.0     2.0     1.0     0.0     0.04.0      1.0     1.0     0.0     0.0     1.0     0.0     2.0     1.0     4.0     0.0     5.0     0.0     0.0     0.0     6.00.0      2.0     23.0    0.0     3.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     5.0     7.0     0.0
        7.0     2.0     12.0    0.0     3.0     4.0     0.0     2.0     2.0     0.0     0.0     0.0     0.0     0.0     0.010.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     9.0     0.0     2.0     2.0     0.0     0.0     0.02.0      1.0     2.0     1.0     0.0     2.0     2.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     6.00.0      3.0     51.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      1.0     11.0    4.0     1.0
        7.0     0.0     1.0     0.0     0.0     1.0     0.0     2.0     2.0     0.0     0.0     6.0     0.0     1.0     0.00.0      1.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     7.0     0.0     2.0     2.0     0.0     0.0     0.04.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     6.00.0      2.0     22.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     2.0     1.02.0      0.0     8.0     2.0     0.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      61843,262913      task-clock (msec)         #    1,000 CPUs utilized
             1.267      context-switches          #    0,020 K/sec
                 6      cpu-migrations            #    0,000 K/sec
             9.247      page-faults               #    0,150 K/sec
   209.457.862.547      cycles                    #    3,387 GHz
    62.977.655.908      stalled-cycles-frontend   #   30,07% frontend cycles idle
    34.472.088.851      stalled-cycles-backend    #   16,46% backend  cycles idle
   454.121.071.078      instructions              #    2,17  insns per cycle
                                                  #    0,14  stalled cycles per insn
    50.050.138.373      branches                  #  809,306 M/sec
       232.983.437      branch-misses             #    0,47% of all branches

      61,868545472 seconds time elapsed


-----Class K=10

jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=10, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 10
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0
        6.0     1.0     3.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     1.0     0.0     0.0     3.0     3.00.0      3.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     7.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     0.0     4.0     0.0     0.0     0.0     1.0     1.00.0      4.0     10.0    0.0     1.0     7.0     1.0     0.0     0.0     0.0     0.0     0.0     3.0     0.0     1.0     1.01.0      0.0     10.0    1.0     2.0
        6.0     1.0     1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     0.0     0.0     3.0     5.00.0      4.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     1.0     0.0     2.0     0.0     2.0     1.0     0.0     5.0     0.0     0.0     0.0     1.0     1.00.0      5.0     21.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     1.01.0      1.0     14.0    1.0     1.0
        1.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     4.0     0.0     2.0     0.0     223.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0
        7.0     11.0    1.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     2.0     2.0     1.0     0.0     0.04.0      1.0     1.0     0.0     0.0     1.0     0.0     2.0     1.0     4.0     0.0     5.0     0.0     0.0     0.0     6.00.0      2.0     23.0    0.0     3.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     5.0     7.0     0.0
        7.0     2.0     12.0    0.0     3.0     4.0     0.0     2.0     2.0     0.0     0.0     0.0     0.0     0.0     0.010.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     9.0     0.0     2.0     2.0     0.0     0.0     0.02.0      1.0     2.0     1.0     0.0     2.0     2.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     6.00.0      3.0     51.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      1.0     11.0    4.0     1.0
        7.0     0.0     1.0     0.0     0.0     1.0     0.0     2.0     2.0     0.0     0.0     6.0     0.0     1.0     0.00.0      1.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     7.0     0.0     2.0     2.0     0.0     0.0     0.04.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     6.00.0      2.0     22.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     2.0     1.02.0      0.0     8.0     2.0     0.0
        5.0     11.0    2.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     0.0     3.0     0.0     3.0     5.00.0      2.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.04.0      2.0     2.0     1.0     0.0     2.0     0.0     2.0     2.0     2.0     3.0     1.0     0.0     0.0     1.0     1.00.0      3.0     23.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     1.0     0.0     2.0     1.01.0      0.0     14.0    1.0     0.0
        1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     222.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      72459,785229      task-clock (msec)         #    1,000 CPUs utilized
             1.563      context-switches          #    0,022 K/sec
                 2      cpu-migrations            #    0,000 K/sec
             9.758      page-faults               #    0,135 K/sec
   245.437.639.173      cycles                    #    3,387 GHz
    69.499.112.466      stalled-cycles-frontend   #   28,32% frontend cycles idle
    35.778.691.923      stalled-cycles-backend    #   14,58% backend  cycles idle
   550.954.072.076      instructions              #    2,24  insns per cycle
                                                  #    0,13  stalled cycles per insn
    60.055.372.773      branches                  #  828,810 M/sec
       232.949.499      branch-misses             #    0,39% of all branches

      72,490217373 seconds time elapsed
	  
-----Class K=12

jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ gcc -Ofast -lm kmeans_baseline_input.c -o KM_1
jwilliams@aolin-login:~/kmeans/GPU/DataTestCPU$ perf stat ./KM_1
Usage: ./KM_1<InputData_Large.csv>, <K=Number of Clusters>, <N=Number of Rows>, <D=Number of Columns>
We now use default parameters with InputData_Large.csv, K=12, N=1000000, D=68
K-means:
         Points: 1000000
         Dimension: 68
         Centroides: 12
reading input data from InputData_Large.csv

Read 1000000 x 68 points data from InputData_Large.csv.

Centroides:
        6.0     11.0    1.0     0.0     0.0     6.0     0.0     2.0     2.0     0.0     0.0     7.0     0.0     2.0     1.00.0      0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     8.0     0.0     2.0     0.0     0.0     0.0     11.04.0     1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     1.00.0      2.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     1.01.0      0.0     13.0    1.0     0.0
        7.0     1.0     1.0     0.0     0.0     0.0     0.0     1.0     2.0     0.0     0.0     7.0     0.0     0.0     0.00.0      0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     0.0     0.0     2.0     2.0     0.0     0.0     0.04.0      2.0     2.0     0.0     0.0     2.0     0.0     2.0     1.0     4.0     0.0     1.0     0.0     0.0     0.0     6.00.0      3.0     10.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     11.0    6.0     0.0
        6.0     1.0     3.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     1.0     0.0     0.0     3.0     3.00.0      3.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     7.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     0.0     4.0     0.0     0.0     0.0     1.0     1.00.0      4.0     10.0    0.0     1.0     7.0     1.0     0.0     0.0     0.0     0.0     0.0     3.0     0.0     1.0     1.01.0      0.0     10.0    1.0     2.0
        6.0     1.0     1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     0.0     0.0     3.0     5.00.0      4.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.02.0      1.0     2.0     1.0     0.0     2.0     0.0     2.0     1.0     0.0     5.0     0.0     0.0     0.0     1.0     1.00.0      5.0     21.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     1.01.0      1.0     14.0    1.0     1.0
        1.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     4.0     0.0     2.0     0.0     223.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0
        7.0     11.0    1.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     2.0     2.0     1.0     0.0     0.04.0      1.0     1.0     0.0     0.0     1.0     0.0     2.0     1.0     4.0     0.0     5.0     0.0     0.0     0.0     6.00.0      2.0     23.0    0.0     3.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      0.0     5.0     7.0     0.0
        7.0     2.0     12.0    0.0     3.0     4.0     0.0     2.0     2.0     0.0     0.0     0.0     0.0     0.0     0.010.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     9.0     0.0     2.0     2.0     0.0     0.0     0.02.0      1.0     2.0     1.0     0.0     2.0     2.0     2.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     6.00.0      3.0     51.0    0.0     1.0     10.0    1.0     0.0     0.0     0.0     0.0     3.0     0.0     0.0     0.0     2.02.0      1.0     11.0    4.0     1.0
        7.0     0.0     1.0     0.0     0.0     1.0     0.0     2.0     2.0     0.0     0.0     6.0     0.0     1.0     0.00.0      1.0     0.0     0.0     1.0     1.0     0.0     0.0     0.0     7.0     0.0     2.0     2.0     0.0     0.0     0.04.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     2.0     4.0     2.0     1.0     0.0     0.0     0.0     6.00.0      2.0     22.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     3.0     0.0     0.0     2.0     1.02.0      0.0     8.0     2.0     0.0
        5.0     11.0    2.0     0.0     0.0     1.0     3.0     2.0     2.0     0.0     0.0     3.0     0.0     3.0     5.00.0      2.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     9.0     0.0     2.0     0.0     0.0     0.0     1.04.0      2.0     2.0     1.0     0.0     2.0     0.0     2.0     2.0     2.0     3.0     1.0     0.0     0.0     1.0     1.00.0      3.0     23.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     1.0     0.0     2.0     1.01.0      0.0     14.0    1.0     0.0
        1.0     0.0     1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     1.0     1.0     0.0     0.0     2.0     0.0     222.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0
        5.0     11.0    1.0     0.0     0.0     1.0     4.0     2.0     2.0     0.0     0.0     4.0     0.0     2.0     2.00.0      1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     2.0     0.0     0.0     0.0     1.04.0      1.0     2.0     2.0     0.0     2.0     0.0     2.0     1.0     2.0     2.0     1.0     0.0     0.0     1.0     1.00.0      2.0     23.0    0.0     1.0     0.0     1.0     0.0     1.0     0.0     0.0     0.0     2.0     0.0     2.0     1.01.0      0.0     12.0    1.0     0.0
        0.0     11.0    2.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     4.0     0.0     0.00.0      0.0     0.0     0.0     0.0     0.0     0.0     2.0     1.0     0.0     0.0     2.0     0.0     211.0   0.0     0.01.0      0.0     10.0    1.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.0     0.00.0      0.0     0.0     0.0     0.0

Number of iterations needed (T): 200

Number of changes (F): 0

 Performance counter stats for './KM_1':

      82726,639445      task-clock (msec)         #    1,000 CPUs utilized
             1.862      context-switches          #    0,023 K/sec
                 5      cpu-migrations            #    0,000 K/sec
             9.248      page-faults               #    0,112 K/sec
   280.128.841.368      cycles                    #    3,386 GHz
    74.478.125.716      stalled-cycles-frontend   #   26,59% frontend cycles idle
    36.051.290.672      stalled-cycles-backend    #   12,87% backend  cycles idle
   647.792.352.117      instructions              #    2,31  insns per cycle
                                                  #    0,11  stalled cycles per insn
    70.062.689.810      branches                  #  846,918 M/sec
       233.091.804      branch-misses             #    0,33% of all branches

      82,760594622 seconds time elapsed

